/**
* Ejemplo básico de escritura y dibujo en una pantalla Oled. Se ha usado un Esp32-C3 Supermini con una Oled incluida de 72x40 (que en realidad resultó ser de 70x40).
*/

//#include <MUIU8g2.h>
#include <U8g2lib.h>
//#include <U8x8lib.h>
#include <Wire.h>

#define SDA_OLED 5
#define CLK_OLED 6

//OLed object, there is no 72x40 constructor in u8g2 hence the 72x40 screen is
// mapped in the middle of the 132x64 pixel buffer of the SSD1306 controller
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, U8X8_PIN_NONE, CLK_OLED, SDA_OLED);

// 'kiwi', 70x40px
const unsigned char epd_bitmap_kiwi [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
	0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0f, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x1f, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3e, 0x07, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x07, 0x87, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0xf0, 0x07, 
	0x81, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0xfd, 0xf0, 0x07, 0x81, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 
	0xe0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x7f, 0xc0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x01, 
	0xf0, 0x1f, 0xc0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x07, 0xe0, 0x0f, 0x80, 0x00, 0x00, 0xff, 0x00, 
	0x00, 0x0f, 0xc0, 0x07, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x01, 
	0xc0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0xf8, 0x00, 
	0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x01, 
	0xe0, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 
	0x00, 0x07, 0xc0, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x07, 0xf0, 
	0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 
	0x1f, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 
	0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0xc0, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x1f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Heart symbol
byte heart[8] = {
  0b00000000,
  0b11000011,
  0b11100111,
  0b01111110,
  0b01111110,
  0b00111100,
  0b00011000,
  0b00000000
};

int width = 70;
int height = 40;
int xOffset = 30; // = (132-w)/2
int yOffset = 24; // = (64-h)/2



void setup(void)
{
     //Serial.begin(9600);
     delay(1000);
     u8g2.begin();
     u8g2.setContrast(255); // set contrast to maximum 
     u8g2.setBusClock(400000); //400kHz I2C 
     u8g2.enableUTF8Print();
     //u8g2.setFont(u8g2_font_unifont_t_latin); //(u8g2_font_ncenB10_tr);
     //Serial.println("OLed iniciada. Para cambiar el tamanio del marco, ingresa (w,h,xOffset,yOffset) en ese orden");
}


void loop(void)
{
    u8g2.clearBuffer(); // clear the internal memory
    //u8g2.drawFrame(xOffset+0, yOffset+0, width, height); //draw a frame around the border
    //u8g2.drawBox(xOffset+0, yOffset+0, width, height); //Fill a box
    //u8g2.setCursor(xOffset+15, yOffset+25);
    //u8g2.printf("%dx%d", width, height);
    //Basic example of string and drawing
    /*u8g2.setCursor(xOffset+4, yOffset+18);
    u8g2.setFont(u8g2_font_unifont_t_latin);
    u8g2.print("ESP32-C3");
    u8g2.drawBitmap(xOffset+22, yOffset+20, 1,8, heart); //u8g2.drawBitMap(x0,y0,byte cnt, h, byte[] bitmap);
    u8g2.drawBitmap(xOffset+32, yOffset+20, 1,8, heart);
    u8g2.drawBitmap(xOffset+42, yOffset+20, 1,8, heart);*/
    //Draw bitmap generated with imageToCpp
    u8g2.drawBitmap(xOffset, yOffset, 9,40, epd_bitmap_kiwi);
    u8g2.sendBuffer(); // transfer internal memory to the display
}
